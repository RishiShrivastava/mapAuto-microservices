# =Juggernaut= Updated docker-compose.yml for persistence and restart policies
services:
  auto_nessus:
    image: mapauto-microservices-auto_nessus:1.0
    build: ./auto_nessus_service
    # =Juggernaut= Port only exposed internally, accessed via nginx reverse proxy
    expose:
      - "8000"
    env_file:
      - ../.env
    # =Juggernaut= Added restart policy and volume for persistence
    restart: unless-stopped
    volumes:
      - ./scan_results:/app/scan_results
      - nessus_data:/app/data
    # =Juggernaut= Added health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  nmapscanner:
    image: mapauto-microservices-nmapscanner:1.0
    build: ./nmapscanner_service
    # =Juggernaut= Port only exposed internally, accessed via nginx reverse proxy
    expose:
      - "8001"
    env_file:
      - ../.env
    # =Juggernaut= Added restart policy and volume for persistence
    restart: unless-stopped
    volumes:
      - ./scan_results:/app/scan_results
    # =Juggernaut= Added health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  nmapall:
    image: mapauto-microservices-nmapall:1.0
    build: ./nmapall_service
    # =Juggernaut= Port only exposed internally, accessed via nginx reverse proxy
    expose:
      - "8002"
    env_file:
      - ../.env
    # =Juggernaut= Added restart policy and volume for persistence
    restart: unless-stopped
    volumes:
      - ./scan_results:/app/scan_results
    # =Juggernaut= Added health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  osscan:
    image: mapauto-microservices-osscan:1.0
    build: ./osscan_service
    # =Juggernaut= Port only exposed internally, accessed via nginx reverse proxy
    expose:
      - "8003"
    env_file:
      - ../.env
    # =Juggernaut= Added restart policy and volume for persistence
    restart: unless-stopped
    volumes:
      - ./scan_results:/app/scan_results
    # =Juggernaut= Added health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  portxmlparser:
    image: mapauto-microservices-portxmlparser:1.0
    build: ./portxmlparser_service
    # =Juggernaut= Port only exposed internally, accessed via nginx reverse proxy
    expose:
      - "8004"
    env_file:
      - ../.env
    # =Juggernaut= Added restart policy and volume for persistence
    restart: unless-stopped
    volumes:
      - ./scan_results:/app/scan_results
    # =Juggernaut= Added health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # =Juggernaut= WAF Detection Service - Advanced Web Application Firewall Analysis
  waf_detection:
    image: mapauto-microservices-waf_detection:1.0
    build: ./waf_detection_service
    container_name: mapauto-waf-detection # =Juggernaut=
    # =Juggernaut= Port only exposed internally, accessed via nginx reverse proxy
    expose:
      - "8005"
    env_file:
      - ../.env
    # =Juggernaut= Added restart policy and volume for persistence
    restart: unless-stopped
    volumes:
      - ./scan_results:/app/waf_results
      - waf_data:/app/data
    # =Juggernaut= Added health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # =Juggernaut= React frontend service - enhanced configuration with HTTPS
  frontend:
    build: ../frontend
    image: mapauto-microservices-frontend:1.0 # =Juggernaut=
    container_name: mapauto-frontend # =Juggernaut=
    # =Juggernaut= Port 3000 only exposed internally, accessed via nginx reverse proxy
    expose:
      - "3000"
    restart: unless-stopped # =Juggernaut=
    environment:
      - CHOKIDAR_USEPOLLING=true # =Juggernaut= For file watching in Docker
      - WATCHPACK_POLLING=true   # =Juggernaut= For hot reload
      - HTTPS=false # =Juggernaut= Disable HTTPS inside container (handled by reverse proxy)
    depends_on:
      - nmapscanner
      - nmapall
      - osscan
      - portxmlparser
      - auto_nessus
      - waf_detection
    # =Juggernaut= Health check for frontend service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # =Juggernaut= Nginx reverse proxy with ModSecurity WAF for Production Demo
  nginx:
    build: ../nginx
    image: mapauto-microservices-nginx:2.0 # =Juggernaut= Updated for WAF security
    container_name: mapauto-security-gateway # =Juggernaut= New name for production
    ports:
      - "443:443" # =Juggernaut= ONLY HTTPS port exposed for maximum security
    restart: unless-stopped # =Juggernaut=
    depends_on:
      - frontend
      - auto_nessus
      - nmapscanner
      - nmapall
      - osscan
      - portxmlparser
      - waf_detection
    # =Juggernaut= Enhanced health check for security gateway
    healthcheck:
      test: ["CMD", "curl", "-f", "-k", "https://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s
    # =Juggernaut= Security environment variables
    environment:
      - NGINX_WORKER_PROCESSES=auto
      - NGINX_WORKER_CONNECTIONS=1024

# =Juggernaut= Added named volumes for data persistence
volumes:
  nessus_data:
    driver: local
  waf_data:
    driver: local
    # =Juggernaut= No original code deleted, only enhanced frontend configuration
